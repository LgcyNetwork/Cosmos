net {
  type = mainnet
  # type = testnet
}

storage {
  # Directory for storing persistent data

  db.version = 2,
  db.engine = "LEVELDB",
  db.directory = "database",
  index.directory = "index",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]

}

# this part of config is used to node discovery.
node.discovery = {
  enable = true  # you should set this entry value with ture if you want your node can be discovered by other node.
  persist = true  # this entry is used to determined to whether storing the peers in the database or not.
  bind.ip = ""
  external.ip = 127.0.0.1
}

# this part of config is used to set backup node for witness service.
node.backup {
  port = 10001
  priority = 8
  members = [
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 16660

  connection.timeout = 2

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  maxActiveNodes = 30

  maxActiveNodesWithSameIp = 2

  minParticipationRate = 0

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 22222 # 11111: mainnet; 20180622: testnet; you can set other number when you deploy one private net, but the node must have the same number in some private net. 
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  http {
    fullNodePort = 16661
    solidityPort = 16662
  }

  rpc {
    port = 50051

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 0
  }

}



seed.node = {
  # List of the seed nodes. This is used to enable the node can connect when join one net at first.
  # If you deploy one private net, you must add some "ip:port" here for other node connecting.
  # Seed nodes are stable full nodes, and the first SuperNode must be inclued in.
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "127.0.0.1:16666"
  ]
}

genesis.block = {
  # Reserve balance
 assets = [
       {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "TPL66VK2gCXNCD7EJg9pgJRfqcRazjhUZY"
      balance = "95000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      address = "TWsm8HtU2A5eEzoT8ev8yaoFjHsXLLrckb"
      balance = "5000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "TSJD5rdu6wZXP7F2m3a3tn8Co3JcMjtBip"
      balance = "-9223372036854775808"
    },
    {
      accountName = "TestK"
      accountType = "AssetIssue"
      address = "LYkwBR8gQGp3heu555TonYHMjj2S3ByJhU"
      balance = "95000000000000000"
    },
    {
      accountName = "TestR"
      accountType = "AssetIssue"
      address = "LQ1fLCoJ4m9xhoGx6gSVZxgJotRvhxgeD5"
      balance = "95000000000000000"
    }
  ]

  witnesses = [
    {
      address: LKcYhpHUiqRcsxMmsXBYzuqi7nbMcYhtmv,
      url = "http://w1.com",
      voteCount = 10000
    },
     {
      address: LU272q5jqbeMC9rfuhPi26ybehMhbk9qTn,
      url = "http://w2.com",
      voteCount = 10001
    },
     {
      address: Lf6yvPx3VBHwnJZMVbM2aGHUJV7tiURmVG,
      url = "http://w3.com",
      voteCount = 10002
    },
     {
      address: LiEgMGMUGteLzZQhZa2AG16xSdEH9i1J87,
      url = "http://w4.com",
      voteCount = 10003
    },
    {
      address: LNmwzzaL5Quft79rZu3Q4S84UCeDrBBnj2,
      url = "http://w5.com",
      voteCount = 10004
    },
    {
      address: LW1j9vvrPMsnHRdyULBTYrTfGPcbFx9w7w,
      url = "http://w6.com",
      voteCount = 10005
    },
    {
      address: LWjasw93L5aZCAmJkhhGNHCMEjPjLFUyYu,
      url = "http://w7.com",
      voteCount = 10006
    },
    {
      address: LXVd936JJ6rQwdgsXDnKVH8GGiiJeYGwhN,
      url = "http://w8.com",
      voteCount = 10007
    },
    {
      address: LLGo1qQ7JB7idcJP4WAHcyg4QaiGpQT337,
      url = "http://w9.com",
      voteCount = 10008
    },
    {
      address: LKbyaXwRefHo4zi9LoBGwcodbY7fywM727,
      url = "http://w10.com",
      voteCount = 10009
    },
    {
      address: LQrmgcg5vXdfsFz4MkcnVdqWLH3pkqtLRg,
      url = "http://w11.com",
      voteCount = 10010
    },
    {
      address: LeXZHUzvHiFVsNScyJ1bGP14m6rUXKipH9,
      url = "http://w12.com",
      voteCount = 10011
    },
    {
      address: LcZHbrPv8XVomsq6PtJrDwzLo8ucQmB2XM,
      url = "http://w13.com",
      voteCount = 10012
    },
    {
      address: LarT6qZhn8HGYk12GcpGaACAz5xJ2nh8X5,
      url = "http://w14.com",
      voteCount = 10013
    },
    {
      address: LcKug4JMZ7GMxhim3nwvy5TYSDFEQ73Nep,
      url = "http://w15.com",
      voteCount = 10014
    },
    {
      address: LfuwEvpC3v1xEuBXMzj7GGc2a5oW8omhyp,
      url = "http://w16.com",
      voteCount = 10015
    },
     {
      address: LZ6w9ZuHWqmyLJWi3VhTk4RaDkwkexCL1B,
      url = "http://w17.com",
      voteCount = 10016
    },
     {
      address: LMko9wMreXmzcBfgV1qEviMCHaciojWNNJ,
      url = "http://w18.com",
      voteCount = 10017
    },
     {
      address: LSaH2rMfwWMEwoQreEzCKVxzDGFcJVESUF,
      url = "http://w19.com",
      voteCount = 10018
    },
     {
      address: LVcqxM2BrcpMqjL5CXAw8TJ4MTcTGp95Yr,
      url = "http://w20.com",
      voteCount = 10019
    },
     {
      address: LL9RrbDCUe7cWeAsTkXxVRjDV2jy9DaUgb,
      url = "http://w21.com",
      voteCount = 10020
    },
     {
      address: LPyzB8VwPgPt9DHR9TPkPJo3dsB2bDWkn1,
      url = "http://w22.com",
      voteCount = 10021
    },
     {
      address: LazExghBunA1oocLKJBHQitJhK4NyH2WiX,
      url = "http://w23.com",
      voteCount = 10022
    },
     {
      address: LQJwkdLPXSUUMt2s67ptTMoKA6Fvzx5yA3,
      url = "http://w24.com",
      voteCount = 10023
    },
     {
      address: LTxWivd3JbkMzJQLo7KL246hVbKjxJDJp5,
      url = "http://w25.com",
      voteCount = 10024
    },
     {
      address: LZ1paLmQjRPFxRY2Ky1wW3vUrD7D9vMaoa,
      url = "http://w26.com",
      voteCount = 10025
    },
     {
      address: LU7u9tMo62pL6QAC5bJ2zrE4S6QwLzZBZ1,
      url = "http://w27.com",
      voteCount = 10026
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "957dc2d350daecc7bb6a38f3938ebde0a0c1cedafe15f0edae4256a2907449f6"
}

localwitness = [
  b3b5bc90a83a079e6229930cdbf53c5dc0d254dbc353be39e95f0ae52ae2858d,
  c88756269bae9f4e2d56bcf456d70143ddc6bd7d8c7de2d7d7d3cf304d0aff9b,
  06F3FE7A49A0FDEDA49B084BE2D3F7EE37308A59771E76F18885BF6194B18C34,
  c73255e094ab27fb3df7ae407bd49e102ce38eca45d6b68afe84350511aa173f,
  D7966F82A972DBD8112C0D806114DCECEEE0F66DC18D6F78DC4F14DAE27FFB45,
  a30cb34361e764da5b7df1f0feeb7c53d41974a5845a63fb5298f9d45bcc472b,
  f6a7d379fbb149297becab5bbe2c6a8be7cb876c600df75fd291c0866306d003,
  c36e3a22f12d06d865365a0a10a33aee615287b2847abb3d5160a7e34cd641fd,
  c0b169790e8813a5d218ff487e4b4aceb777a8a15e4cd05530129755aa09e9ad,
  618d8361e1d3a7438b0b71246090313c0fa0952c8cd6c7f96c8855f4ccd61e5c, 
  ef233fb57fc2621505eab0d7019c1b9538192622996c97a3281a7d34b3a29531,
  30c070171e8d644ce31690bc11b6183b72362e8cc647633845423539f247b2e6,
  0ca1b30b1e9b79184605a5adf0b922b34604bbd185b34bd2e40c66092bfa0730,
  bd613df96f6b1181c950b66d837f7ef4edeb083e93b8b34099535d3ffeb1ad1b,
  b4b6c6431fd9bd4dc6661bc6f789aff759014a5d2dadb4028d9ce8fbc626febf,
  be9e17e94562f04970a5ef47950e4dba78d9e36473c8951d320167b07b658270,
  5a65312eb87aad6953bf20554ca3abb35a77314e70c825b2fca56e299fa79f95,
  e3ad9f05687fe32944d0b4d267ff33bd38f52e8e789eab3ee354714f9ee82464,
  5447f30ffa0c9b5b44b9d597769c45a0f3632931f2c10445a50ad8a1256a25bf,
  091a6b94d25b331aa6378a485f8a871b8156cc44279bbcb7b7a4bd9cc0c6d7ce,
  184723827e82b97d02870253ed0b5ef9c4650e8103ea69afd40c67d88e7c3a94,
  91583827d64af86ff8df1907a4a942995eb59c240837f83a8395801e0c8312a9,
  1280f2e7323213b7305a1e47bf6ddfdd9ec164e937d0a473b4c03c2e9ade4474,
  e27d5b261994fdcb3af8259f5d31c3baa45545f21e1fb8dcaedd23dd18ee6154,
  5d4ef569d9515ab3ba774daae69a56d252ac34f688270f24af2addcbf995f60d # you must enable this value and the witness address are match.
]

#localwitnesskeystore = [
#  "src/main/resources/localwitnesskeystore.json"  # if you do not set the localwitness above, you must set this value.Otherwise,your SuperNode can not produce the block. 
#]

block = {
  needSyncCheck = true # first node : false, other : true
  maintenanceTimeInterval = 21600000 // 1 day: 86400000(ms), 6 hours: 21600000(ms)
}


vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0
}

committee = {
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
}

event.subscribe = {
  native = {
    useNativeQueue = true // if true, use native message queue, else use event plugin.
    bindport = 5555 // bind port
    sendqueuelength = 1000 //max length of send queue
  }

  path = "" // absolute path of plugin
  server = "" // target server address to receive event triggers
  dbconfig = "" // dbname|username|password
  contractParse = true,
  topics = [
    {
      triggerName = "block" // block trigger, the value can't be modified
      enable = false
      topic = "block" // plugin topic, the value could be modified
    },
    {
      triggerName = "transaction"
      enable = false
      topic = "transaction"
    },
    {
      triggerName = "contractevent"
      enable = false
      topic = "contractevent"
    },
    {
      triggerName = "contractlog"
      enable = false
      topic = "contractlog"
    },
    {
      triggerName = "solidity" // solidity block event trigger, the value can't be modified
      enable = true            // the default value is true
      topic = "solidity"
    }
  ]

  filter = {
    fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
    toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
    contractAddress = [
      "" // contract address you want to subscribe, if it's set to "", you will receive contract logs/events with any contract address.
    ]

    contractTopic = [
      "" // contract topic you want to subscribe, if it's set to "", you will receive contract logs/events with any contract topic.
    ]
  }
}

